[{"/home/sujon4002/react-projects/meme-verse/src/index.js":"1","/home/sujon4002/react-projects/meme-verse/src/App.js":"2","/home/sujon4002/react-projects/meme-verse/src/reportWebVitals.js":"3","/home/sujon4002/react-projects/meme-verse/src/authentication/Signin.js":"4","/home/sujon4002/react-projects/meme-verse/src/authentication/Signup.js":"5","/home/sujon4002/react-projects/meme-verse/src/util.js":"6","/home/sujon4002/react-projects/meme-verse/src/home/Newsfeed.js":"7","/home/sujon4002/react-projects/meme-verse/src/components/NavigationBar.js":"8","/home/sujon4002/react-projects/meme-verse/src/components/ShareMeme.js":"9"},{"size":474,"mtime":1609524256007,"results":"10","hashOfConfig":"11"},{"size":1380,"mtime":1609442036773,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609437634554,"results":"13","hashOfConfig":"11"},{"size":5109,"mtime":1609500777080,"results":"14","hashOfConfig":"11"},{"size":9187,"mtime":1609445284017,"results":"15","hashOfConfig":"11"},{"size":1429,"mtime":1609440994112,"results":"16","hashOfConfig":"11"},{"size":2999,"mtime":1609504502827,"results":"17","hashOfConfig":"11"},{"size":4528,"mtime":1609532233984,"results":"18","hashOfConfig":"11"},{"size":7769,"mtime":1609532772143,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1785ib",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/home/sujon4002/react-projects/meme-verse/src/index.js",[],["44","45"],"/home/sujon4002/react-projects/meme-verse/src/App.js",["46","47"],"import React, {useState} from 'react';\nimport Signin from './authentication/Signin';\nimport SignUp from './authentication/Signup';\nimport Newsfeed from './home/Newsfeed';\n//import Profile from './profile/Account';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\n\nconst App = () => {\n    const [user, setUser] = useState({});\n    const [accessToken, setAccessToken] = useState('');\n\n    function handleUser(data) {\n        const localUser = data.profile;\n        localUser.profilePic = data.profile.name;\n        setUser(localUser);\n        setAccessToken(data.accessToken);\n    }\n\n    return(\n        <Router>\n            <div>\n                <Switch>\n                    <Route path=\"/signin\">\n                        <Signin handleUser = {handleUser}/>\n                    </Route>\n                    <Route path=\"/signup\" exact>\n                        <SignUp />\n                    </Route>\n                    <Route path=\"/\" exact>\n                        <SignUp />\n                    </Route>\n                    <Route path=\"/home\" exact>\n                        <Newsfeed/>\n                    </Route>\n                    {/* <Route path=\"/profile\">\n                        <Profile/>\n                    </Route> */}\n                </Switch>\n            </div>\n            \n        </Router>\n    );\n}\n\nexport default App;\n","/home/sujon4002/react-projects/meme-verse/src/reportWebVitals.js",[],"/home/sujon4002/react-projects/meme-verse/src/authentication/Signin.js",["48","49","50"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\nimport {\n    Link,\n    useHistory\n} from 'react-router-dom';\n\nimport { hasInternetConnection } from './../util';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        //backgroundColor: 'red',\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n        margin: 'auto',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignIn(props) {\n    const classes = useStyles();\n\n    const history = useHistory();\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [user, setUser] = useState({});\n    const [data, setData] = useState({});\n\n    const saveSigninDataToLocalStorage = data => {\n        localStorage.setItem(`token-${data?.profile?.email}`, data?.accessToken);\n    }\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n        if (!hasInternetConnection(true))return;\n        setError('');\n        \n        const baseUrl = `http://localhost:3010/api/v1`;\n        const option = {\n            method: 'post',\n            url: `${baseUrl}/users/signin`,\n            data: {\n                email: email,\n                password: password\n            }\n        };\n\n        setPassword('');\n        setIsLoading(true);\n        try {\n            const response = await axios(option);\n            if (response.data) {\n                console.log(`signin: `, response.data);\n                setData(response.data);\n                setIsLoading(false);\n                saveSigninDataToLocalStorage(response.data);\n                history.push('/home', response.data);\n            }\n        } catch(error) {\n            console.log(error);\n            if(error.response) {\n                setError(error.response.data);\n            }\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Helmet>\n                <title> Sign In</title>\n            </Helmet>\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar} src='ICON'/>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} autoComplete='off'>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoFocus\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                    { error && \n                        <Grid item xs={12}>\n                            <div style={{color: 'red'}}>{error}</div>\n                        </Grid>\n                    }\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        style={{textTransform: 'none'}}\n                        onClick={handleSubmit}\n                    >\n                        {   \n                            isLoading ? 'Singing In..' : 'Sign In'\n                        }\n                    </Button>\n                    <Grid container>\n                        <Grid item style={{margin: 'auto'}}>\n                            <Link to=\"/signup\" variant=\"body2\">\n                                Don't have an account? Sign Up\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}","/home/sujon4002/react-projects/meme-verse/src/authentication/Signup.js",[],"/home/sujon4002/react-projects/meme-verse/src/util.js",[],"/home/sujon4002/react-projects/meme-verse/src/home/Newsfeed.js",["51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68"],"import React, { useEffect, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\nimport { isEmpty } from 'lodash';\nimport {\n    Link,\n    useHistory\n} from 'react-router-dom';\n\nimport { hasInternetConnection } from '../util';\nimport NavigationBar from '../components/NavigationBar';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        //backgroundColor: 'red',\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n        margin: 'auto',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Newsfeed(props) {\n    const classes = useStyles();\n\n    const history = useHistory();\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [user, setUser] = useState({});\n    const [isSignedIn, setIsSignedIn] = useState(false);\n\n    const userSignedIn = async (token) => {\n        const baseUrl = `http://localhost:3010/api/v1`;\n        const option = {\n            method: 'get',\n            url: `${baseUrl}/auth`,\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        };\n\n        try {\n            const response = await axios(option);\n            if (response.status === 200) {\n                setIsSignedIn(true);\n            }\n        } catch(error) {\n            console.log(error);\n            if(error.response) {\n                setError(error.response.data);\n            }\n        }\n    }\n\n    useEffect(() => {\n        const data = history.location.state;\n        const user = data?.profile;\n        const token = data?.accessToken;\n        console.log(`user info: `, user);\n        userSignedIn(token);\n        setUser(user);\n    }, []);\n\n    if(isEmpty(user) || user === undefined) {\n        return(\n            <div>\n                <Helmet>\n                    <title> Meme</title>\n                </Helmet>\n                <NavigationBar isSignedIn = {isSignedIn} user = {user}/>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <Helmet>\n                <title> Home</title>\n            </Helmet>\n            <NavigationBar isSignedIn = {isSignedIn} user = {user}/>\n            HAHA\n        </div>\n    );\n}","/home/sujon4002/react-projects/meme-verse/src/components/NavigationBar.js",["69","70"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport CreateMeme from './ShareMeme';\n\nimport {\n    Link,\n    useHistory\n} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    orange: {\n        color: theme.palette.getContrastText(deepOrange[500]),\n        backgroundColor: deepOrange[500],\n    },\n}));\n\nexport default function NavigationBar(props) {\n    const classes = useStyles();\n\n    const history = useHistory();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [open, setOpen] = useState(false);\n\n    const handleProfileClick = () => {\n        console.log('go to profile');\n        history.push('/profile', props.owner);\n    }\n\n    const handleLogout = () => {\n        console.log('user will logged out');\n        localStorage.clear();\n        history.push('/signin');\n    }\n\n    const handleClose = (profile) => {\n        console.log('profile', profile);\n        setOpen(false);\n        //setProfile(profile);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color='transparent' style={{height: '60px'}}>\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Meme Verse\n                    </Typography>\n                    {\n                        props.isSignedIn === true\n                            ? <React.Fragment>\n                                <Avatar \n                                    className={classes.orange}\n                                    onClick = { (e) => setAnchorEl(e.currentTarget) }\n                                >\n                                    {props.user.name[0]}\n                                </Avatar>\n                                <Menu\n                                    id=\"simple-menu\"\n                                    anchorEl={anchorEl}\n                                    keepMounted\n                                    open={Boolean(anchorEl)}\n                                    onClose={() => setAnchorEl(null)}\n                                >\n                                    <MenuItem onClick={ handleProfileClick }>Profile</MenuItem>\n                                    <MenuItem onClick={ handleLogout }>Logout</MenuItem>\n                                </Menu>\n                                <Button \n                                    style={{textTransform: 'none', marginLeft: '10px'}}\n                                    color='inherit'\n                                    variant='outlined'\n                                    onClick = {() => setOpen(true)}\n                                >\n                                    Upload\n                                </Button>\n                                <CreateMeme user={props.user} open={open} onClose={handleClose} />\n                              </React.Fragment> \n                            : <React.Fragment>\n                                <Button \n                                    color='primary'\n                                    style={{textTransform: 'none'}}\n                                    onClick = {() => {\n                                        history.push('/signin');\n                                    }}\n                                >\n                                    Login\n                                </Button>\n                                <Button \n                                    color='primary'\n                                    style={{textTransform: 'none'}}\n                                    onClick = {() => {\n                                        history.push('/signup');\n                                    }}\n                                >\n                                    Signup\n                                </Button>\n                              </React.Fragment>\n\n                    }\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}","/home/sujon4002/react-projects/meme-verse/src/components/ShareMeme.js",["71","72","73"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(0),\n        maxHeight: '100%'\n    },\n    paper: {\n        marginTop: '10%',\n        marginBottom: '10%',\n        marginLeft: '30%',\n        marginRight: '30%',\n        paddingBottom: '8px',\n        paddingTop: '5px',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    list: {\n        marginTop: theme.spacing(0),\n        maxHeight: '85vh',\n        overflow: 'auto',\n    },\n    option: {\n        marginTop: theme.spacing(2),\n    },\n    large: {\n        width: theme.spacing(10),\n        height: theme.spacing(10),\n    },\n    input: {\n        display: 'none',\n    },\n}));\n\nexport default function CreateMeme(props) {\n    const classes = useStyles();\n\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const [meme, setMeme] = useState({});\n    const [selectedImage, setSelectedImage] = useState(``);\n    const [isSaving, setIsSaving] = useState(false);\n    const[image, setImage] = useState(null);\n\n    const handleSelectedImage = (event) => {\n        if (event.target.files && event.target.files[0]) {\n            const img = event.target.files[0];\n            setMeme({\n                ...meme,\n                url: img\n            });\n            setImage(img);\n            setSelectedImage(URL.createObjectURL(img));\n        }\n    }\n\n    const handleSave = async () => {\n        const token = localStorage.getItem(`token-${props.user.email}`);\n        \n        const formData = new FormData();\n        formData.append('image', meme.url);\n        formData.append('content', meme.content);\n\n        const baseUrl = `http://localhost:3010/api/v1`;\n        const option = {\n            method: 'post',\n            url: `${baseUrl}/memes`,\n            headers: {\n                Authorization: `Bearer ${token}`,\n                'content-type': 'multipart/form-data'\n                \n            },\n            data: formData\n        };\n\n        try {\n            setIsSaving(true);\n            const response = await axios(option);\n            if (response.data) {\n                setIsSaving(false);\n                props.onClose(meme);\n            }\n        } catch(error) {\n            setIsSaving(false);\n            console.log('error during creating meme: ', error);\n            props.onClose(meme);\n        }\n    };\n    \n    return (\n        <Dialog \n            onClose = {() => props.onClose(meme)} \n            open = {props.open} \n            fullScreen={fullScreen}\n        >\n        \n            <Grid \n                container\n                direction='col'\n                spacing={1}\n                style={{\n                    marginTop: '10px',\n                    marginBottom: '5px',\n                }}\n            >\n                <Grid item xs={12} style={{textAlign: 'center'}}>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Share your meme\n                    </Typography>\n                </Grid>\n                <Grid\n                    item \n                    xs={12} \n                    style={{\n                        marginLeft: '10%',\n                        marginRight: '10%'\n                    }}\n                >\n                    <TextField \n                        id=\"outlined-basic\"  \n                        variant=\"outlined\"\n                        size='small'\n                        label='Write short description...(max 80 characters)'\n                        fullWidth\n                        onChange={(e) => {\n                            if (e.target.value.length > 80) {\n                                alert('Please follow the constraint');\n                            } else {\n                                setMeme({\n                                    ...meme,\n                                    content: e.target.value\n                                });\n                            }\n                        }}\n                    />\n                </Grid>\n                <Grid   \n                    item\n                    xs={12}\n                    style={{padding: 'auto'}}\n                >\n                    { selectedImage\n                        ? <img \n                            src={selectedImage}  \n                            height='350'\n                            style={{ \n                                display: 'block', \n                                marginLeft: 'auto', \n                                marginRight: 'auto',\n                                width: '70%'\n                            }}\n                        >  \n                        </img>\n                        : ''\n                    }\n                </Grid>\n                <Grid   \n                    item\n                    xs={12}\n                >\n                    <input\n                        accept=\"image/*\"\n                        className={classes.input}\n                        id=\"img-upload\"\n                        multiple\n                        type=\"file\"\n                        onChange = { handleSelectedImage }\n                    />\n                    <label htmlFor=\"img-upload\">\n                        <Button \n                            variant=\"outlined\" \n                            color=\"primary\" \n                            component=\"span\"\n                            style={{\n                                marginTop: '10px',\n                                display: 'block',\n                                marginLeft: 'auto',\n                                marginRight: 'auto',\n                                width: '30%',\n                                textAlign: 'center',\n                                textTransform: 'none'\n                            }}\n                        >\n                            Choose image\n                        </Button>\n                    \n                    </label>\n                </Grid>\n                <Grid item xs={12} container style={{marginTop: '20px', textAlign: 'center'}}>\n                    <Grid item xs={6}>\n                        <Button \n                            variant=\"outlined\" \n                            color=\"primary\" \n                            style={{textTransform: 'none'}}\n                            onClick={handleSave}\n                        >\n                            { isSaving ? 'Creating...' : 'Create'}\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button \n                            variant=\"outlined\" \n                            color=\"secondary\" \n                            style={{\n                                textTransform: 'none'\n                            }}\n                            onClick={() => props.onClose(meme)}\n                        >\n                            Cancel\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Dialog>\n    );\n}\n\n",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":14,"column":12,"nodeType":"80","messageId":"81","endLine":14,"endColumn":16},{"ruleId":"78","severity":1,"message":"82","line":15,"column":12,"nodeType":"80","messageId":"81","endLine":15,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":51,"column":12,"nodeType":"80","messageId":"81","endLine":51,"endColumn":16},{"ruleId":"78","severity":1,"message":"83","line":51,"column":18,"nodeType":"80","messageId":"81","endLine":51,"endColumn":25},{"ruleId":"78","severity":1,"message":"84","line":52,"column":12,"nodeType":"80","messageId":"81","endLine":52,"endColumn":16},{"ruleId":"78","severity":1,"message":"85","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":14},{"ruleId":"78","severity":1,"message":"86","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":14},{"ruleId":"78","severity":1,"message":"87","line":4,"column":8,"nodeType":"80","messageId":"81","endLine":4,"endColumn":19},{"ruleId":"78","severity":1,"message":"88","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":17},{"ruleId":"78","severity":1,"message":"89","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":12},{"ruleId":"78","severity":1,"message":"90","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":18},{"ruleId":"78","severity":1,"message":"91","line":9,"column":8,"nodeType":"80","messageId":"81","endLine":9,"endColumn":17},{"ruleId":"78","severity":1,"message":"92","line":15,"column":5,"nodeType":"80","messageId":"81","endLine":15,"endColumn":9},{"ruleId":"78","severity":1,"message":"93","line":19,"column":10,"nodeType":"80","messageId":"81","endLine":19,"endColumn":31},{"ruleId":"78","severity":1,"message":"94","line":45,"column":11,"nodeType":"80","messageId":"81","endLine":45,"endColumn":18},{"ruleId":"78","severity":1,"message":"95","line":49,"column":12,"nodeType":"80","messageId":"81","endLine":49,"endColumn":17},{"ruleId":"78","severity":1,"message":"96","line":49,"column":19,"nodeType":"80","messageId":"81","endLine":49,"endColumn":27},{"ruleId":"78","severity":1,"message":"97","line":50,"column":12,"nodeType":"80","messageId":"81","endLine":50,"endColumn":20},{"ruleId":"78","severity":1,"message":"98","line":50,"column":22,"nodeType":"80","messageId":"81","endLine":50,"endColumn":33},{"ruleId":"78","severity":1,"message":"99","line":51,"column":12,"nodeType":"80","messageId":"81","endLine":51,"endColumn":17},{"ruleId":"78","severity":1,"message":"100","line":52,"column":12,"nodeType":"80","messageId":"81","endLine":52,"endColumn":21},{"ruleId":"78","severity":1,"message":"101","line":52,"column":23,"nodeType":"80","messageId":"81","endLine":52,"endColumn":35},{"ruleId":"102","severity":1,"message":"103","line":86,"column":8,"nodeType":"104","endLine":86,"endColumn":10,"suggestions":"105"},{"ruleId":"78","severity":1,"message":"106","line":8,"column":22,"nodeType":"80","messageId":"81","endLine":8,"endColumn":32},{"ruleId":"78","severity":1,"message":"92","line":15,"column":5,"nodeType":"80","messageId":"81","endLine":15,"endColumn":9},{"ruleId":"78","severity":1,"message":"107","line":11,"column":10,"nodeType":"80","messageId":"81","endLine":11,"endColumn":20},{"ruleId":"78","severity":1,"message":"108","line":64,"column":11,"nodeType":"80","messageId":"81","endLine":64,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":164,"column":27,"nodeType":"111","endLine":173,"endColumn":26},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'accessToken' is assigned a value but never used.","'setUser' is assigned a value but never used.","'data' is assigned a value but never used.","'Avatar' is defined but never used.","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'Link' is defined but never used.","'hasInternetConnection' is defined but never used.","'classes' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'error' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'setIsLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history.location.state'. Either include it or remove the dependency array.","ArrayExpression",["114"],"'deepPurple' is defined but never used.","'useHistory' is defined but never used.","'image' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [history.location.state]",{"range":"117","text":"118"},[2495,2497],"[history.location.state]"]